# -*- coding: utf-8 -*-
"""text_to_emotion

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-t3d8D4qmvGr_iweLQP9fgZj3Q2zEyt6
"""

import pandas as pd
import matplotlib.pyplot as plt
from wordcloud import WordCloud

df=pd.read_csv("/content/mental_health.csv")
df
df.dropna()
df

df.dtypes
msg=df.text
msg=msg.str.replace('[^a-zA-Z0-9]+'," ")
msg

text_corpus = ' '.join(df['text'].values)
wordcloud = WordCloud(width=800, height=400, background_color='pink').generate(text_corpus)
plt.figure(figsize=(10, 5))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.show()

import nltk
from nltk.stem import PorterStemmer
nltk.download("punkt")
from nltk.tokenize import word_tokenize

stemmer=PorterStemmer()
msg=msg.apply(lambda line:[stemmer.stem(token.lower()) for token in word_tokenize(line)]).apply(lambda token:" ".join(token))
msg=msg.apply(lambda line:[token for token in word_tokenize(line) if len(token)>2]).apply(lambda y:" ".join(y))
from sklearn.feature_extraction.text import TfidfVectorizer

from sklearn.feature_extraction.text import TfidfVectorizer
tf=TfidfVectorizer()
data_vec=tf.fit_transform(msg)
print(data_vec)

y=df['label'].values
y

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(data_vec,y,test_size=0.3,random_state=32)

from sklearn.svm import SVC
# from sklearn.naive_bayes import GaussianNB
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import AdaBoostClassifier
from sklearn.metrics import classification_report
sv=SVC()
# nb=GaussianNB()
rf=RandomForestClassifier()
ab= AdaBoostClassifier()
models=[sv,rf,ab]
for model in models:
  print(model)
  model.fit(x_train,y_train)
  y_pred=model.predict(x_test)
  print(classification_report(y_test,y_pred))

